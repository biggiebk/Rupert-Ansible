- name: Install Kafka
  hosts: cores
  tasks:
  - name: Install openJDK
    ansible.builtin.apt:
      name: openjdk-19-jre-headless
      state: present
      update_cache: true
    become: true
  - name: Create install directory
    ansible.builtin.file:
      path: ~/install_rupert
      state: directory
  - name: Download Kafka
    ansible.builtin.get_url:
      url: https://downloads.apache.org/kafka/3.5.0/kafka_2.13-3.5.0.tgz
      dest: ~/install_rupert/kafka_2.13-3.5.0.tgz
      checksum: sha512:7B79BD0844DB683C06C3491955BB183D48A47FA4639D2E241B9F4FF4060C4B70814DAC7D96BEA87DFFCA0C8AE038278C4FABF68D4EA1194228D67D9C3B1D247C
  - name: Extract Kafka
    ansible.builtin.unarchive:
      src: ~/install_rupert/kafka_2.13-3.5.0.tgz
      dest: ~/install_rupert/
      remote_src: true
  - name: Create app directory if it does exist
    ansible.builtin.file:
      path: ~/app
      state: directory
  - name: Copy Kafka Directory to appp
    ansible.builtin.copy:
      src: ~/install_rupert/kafka_2.13-3.5.0/
      dest: ~/app/kafka_2.13-3.5.0
      remote_src: true
      force: false
  - name: Configure Kraft
    ansible.builtin.shell:  |
      KAFKA_CLUSTER_ID="$(~/app/kafka_2.13-3.5.0/bin/kafka-storage.sh random-uuid)"
      ~/app/kafka_2.13-3.5.0/bin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c ~/app/kafka_2.13-3.5.0/config/kraft/server.properties
    args: 
      creates: /tmp/kraft-combined-logs/bootstrap.checkpoint
  - name: Create app/bin directory if it does not exist
    ansible.builtin.file:
      path: ~/app/bin
      state: directory
  - name: Copy kafka systemd service file
    ansible.builtin.copy:
      src: files/rupert-kafka.service
      dest: /etc/systemd/system/
    become: true
  - name: Enable kafka service
    ansible.builtin.service:
      name: rupert-kafka
      enabled: yes
      state: started
      daemon_reload: true
    async: 60
    poll: 5
    become: true